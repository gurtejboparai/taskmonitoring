Index: app/src/main/java/com/example/myapplication/Persistence/Data/DayPersistenceDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Persistence.Data;\n\nimport com.example.myapplication.Object.Day;\nimport com.example.myapplication.Persistence.Day_persistence;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DayPersistenceDB implements Day_persistence {\n    List<Day> dayList;\n    public DayPersistenceDB(){\n        this.dayList = new ArrayList<>();\n    }\n\n    public void addDays(Day target){\n        dayList.add(new Day(3,3,2021,12,14));\n        dayList.add(new Day(3,3,2021,10,11));\n        dayList.add(new Day(4,3,2021,9,10));\n        dayList.add(new Day(4,3,2021,14,15));\n        dayList.add(new Day(4, 3,2021,17,20));\n        dayList.add(new Day(5,3,2021,9,11));\n    }\n\n    @Override\n    public void setStartTime(Day target, int newTime) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            target.changeStartTime(newTime);\n            this.dayList.set(index,target);\n        }\n    }\n\n    @Override\n    public void setEndTime(Day target, int newTime) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            target.changeEndTime(newTime);\n            this.dayList.set(index,target);\n        }\n    }\n\n    @Override\n    public void setMonth(Day target, int newMonth) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            target.changeMonth(newMonth);\n            this.dayList.set(index,target);\n        }\n    }\n\n    @Override\n    public void setDay(Day target, int newDay) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            target.changeDay(newDay);\n            this.dayList.set(index,target);\n        }\n    }\n\n    @Override\n    public void setYear(Day target, int newYear) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            target.changeYear(newYear);\n            this.dayList.set(index,target);\n        }\n    }\n\n    @Override\n    public void deleteDay(Day target) {\n        int index = this.dayList.indexOf(target);\n        if(index>=0){\n            this.dayList.remove(target);\n        }\n    }\n\n    @Override\n    public void addDay(Day target) {\n        if(!this.dayList.contains(target))\n            this.dayList.add(target);\n    }\n\n    @Override\n    public List<Day> getAllDay() {\n        return this.dayList;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Persistence/Data/DayPersistenceDB.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Persistence/Data/DayPersistenceDB.java	(date 1614207207000)
@@ -13,31 +13,31 @@
     }
 
     public void addDays(Day target){
-        dayList.add(new Day(3,3,2021,12,14));
-        dayList.add(new Day(3,3,2021,10,11));
-        dayList.add(new Day(4,3,2021,9,10));
-        dayList.add(new Day(4,3,2021,14,15));
-        dayList.add(new Day(4, 3,2021,17,20));
-        dayList.add(new Day(5,3,2021,9,11));
+        dayList.add(new Day(3,3,2021));
+        dayList.add(new Day(3,3,2021));
+        dayList.add(new Day(4,3,2021));
+        dayList.add(new Day(4,3,2021));
+        dayList.add(new Day(4, 3,2021));
+        dayList.add(new Day(5,3,2021));
     }
 
-    @Override
+    /*@Override
     public void setStartTime(Day target, int newTime) {
         int index = this.dayList.indexOf(target);
         if(index>=0){
             target.changeStartTime(newTime);
             this.dayList.set(index,target);
         }
-    }
+    }*/
 
-    @Override
+    /*@Override
     public void setEndTime(Day target, int newTime) {
         int index = this.dayList.indexOf(target);
         if(index>=0){
             target.changeEndTime(newTime);
             this.dayList.set(index,target);
         }
-    }
+    }*/
 
     @Override
     public void setMonth(Day target, int newMonth) {
Index: app/src/main/java/com/example/myapplication/Business/Access_task.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Business;\n\nimport android.widget.Toast;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.example.myapplication.Object.Tasks;\nimport com.example.myapplication.Persistence.Task_persistence;\nimport com.example.myapplication.application.Service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Access_task extends AppCompatActivity {\n\n    private List<Tasks> allTasks;\n    private Task_persistence taskPersistence;\n\n    public Access_task(){\n    // need a fake database here\n        taskPersistence = Service.getTaskPersistence();\n        allTasks=new ArrayList<>();\n    }\n\n    public Access_task(Task_persistence taskPersistence){\n        this.taskPersistence = taskPersistence;\n        allTasks = taskPersistence.getAllTasks();\n    }\n\n    public Tasks getTask(int taskId) {\n        return taskPersistence.getTask(taskId);\n    }\n\n    public Tasks addTask(final Tasks newTask){\n        if(newTask.getTaskTitle() == null || newTask.getTaskDescription() == null || newTask.getTaskDate() == null){ //if(newTask == null)\n            String taskCreateMessage = \"Please enter all fields.\";\n            Toast.makeText(getApplicationContext(), taskCreateMessage, Toast.LENGTH_SHORT).show();\n        }\n        return taskPersistence.addTask(newTask);\n    }\n\n    public Tasks deleteTask(Tasks taskToDel){\n        return taskPersistence.deleteTask(taskToDel);\n    }\n\n    public void editTask(Tasks oldTask, Tasks newTask){\n        taskPersistence.editTask(oldTask,newTask);\n    }\n\n    public List<Tasks> getAllTasks() {\n        allTasks = taskPersistence.getAllTasks();\n        return allTasks;\n    }\n\n\n\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Business/Access_task.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Business/Access_task.java	(date 1614207207000)
@@ -9,6 +9,7 @@
 import com.example.myapplication.application.Service;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 
 public class Access_task extends AppCompatActivity {
@@ -47,6 +48,10 @@
         taskPersistence.editTask(oldTask,newTask);
     }
 
+    public void setTaskDate(Tasks task, Date taskDate){
+        taskPersistence.setTaskDate(task, taskDate);
+    }
+
     public List<Tasks> getAllTasks() {
         allTasks = taskPersistence.getAllTasks();
         return allTasks;
Index: app/src/main/java/com/example/myapplication/Persistence/Data/TaskPersistenceDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Persistence.Data;\n\nimport com.example.myapplication.Object.Tasks;\nimport com.example.myapplication.Persistence.Task_persistence;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\npublic class TaskPersistenceDB implements Task_persistence {\n    List<Tasks> tasksList;\n\n    public TaskPersistenceDB(){\n        tasksList = new ArrayList<>();\n    }\n\n    public void addTasks(){\n        int numOfTasks = 0;\n        this.tasksList.add(new Tasks(numOfTasks +1, \"Call the doctor\",\"setup appointment for Kevin\", new Date(2021,3,2)));\n        this.tasksList.add(new Tasks(numOfTasks +1,\"Workout\",\"Do cardio for 30 minutes\",new Date(2021,3,4)));\n        this.tasksList.add(new Tasks(numOfTasks +1,\"COMP3350 due\",\"Iteration-1 due on Friday\",new Date(2021, 3, 3)));\n        this.tasksList.add(new Tasks(numOfTasks +1,\"Meal Prep\",\"Prepare the meals for next 3 days and store\",new Date(2021, 3,1)));\n        this.tasksList.add(new Tasks(numOfTasks +1,\"COMP3340 lab\",\"Lab-3 is due tomorrow\",new Date(2021,2,28)));\n        this.tasksList.add(new Tasks(numOfTasks +1,\"Talk to the manager\",\"Inform my new availability to the manager \",new Date(2021,2,28)));\n    }\n\n\n    @Override\n    public Tasks getTask(int taskId) {\n        for(Tasks task : this.tasksList){\n            if(task.getCurrTaskId()==taskId)\n                return task;\n        }\n        return null;\n    }\n\n    public Tasks addTask(Tasks task){\n        if(!this.tasksList.contains(task)){\n            this.tasksList.add(task);\n        }\n        else\n            return null;\n        return task;\n    }\n\n    @Override\n    public Tasks deleteTask(Tasks task) {\n        return null;\n    }\n\n    @Override\n    public void editTask(Tasks oldTask, Tasks newTask) {\n        if(this.tasksList.contains(oldTask)){\n            int index = this.tasksList.indexOf(oldTask);\n            this.tasksList.set(index,newTask);\n        }\n    }\n\n    @Override\n    public List<Tasks> getAllTasks() {\n        return this.tasksList;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Persistence/Data/TaskPersistenceDB.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Persistence/Data/TaskPersistenceDB.java	(date 1614207207000)
@@ -56,6 +56,15 @@
         }
     }
 
+    @Override
+    public void setTaskDate(Tasks task,Date taskDate) {
+        int index = this.tasksList.indexOf(task);
+        if(index>=0){
+            task.setTaskDate(taskDate);
+            this.tasksList.set(index,task);
+        }
+    }
+
     @Override
     public List<Tasks> getAllTasks() {
         return this.tasksList;
Index: app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Persistence;\n\nimport com.example.myapplication.Object.Tasks;\n\nimport java.util.List;\n\npublic interface Task_persistence {\n\n    Tasks getTask(int taskId);\n    Tasks addTask(final Tasks task);\n    Tasks deleteTask( Tasks task);\n    void editTask(Tasks oldTask, Tasks newTasks);\n\n    List<Tasks> getAllTasks();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java	(date 1614207207000)
@@ -2,14 +2,16 @@
 
 import com.example.myapplication.Object.Tasks;
 
+import java.util.Date;
 import java.util.List;
 
 public interface Task_persistence {
 
     Tasks getTask(int taskId);
-    Tasks addTask(final Tasks task);
+    Tasks addTask(Tasks task);
     Tasks deleteTask( Tasks task);
     void editTask(Tasks oldTask, Tasks newTasks);
+    public void setTaskDate(Tasks target,Date taskDate);
 
     List<Tasks> getAllTasks();
 }
Index: app/src/main/java/com/example/myapplication/Object/Day.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Object;\n\nimport java.util.Calendar;\n\npublic class Day {\n    private int day;\n    private int month;\n    private int year;\n    private int startTime;\n    private int endTime;\n\n    public Day(int day, int month, int year, int startTime, int endTime){\n        this.day = day;\n        this.month = month;\n        this.year = year;\n        this.startTime = startTime;\n        this.endTime = endTime;\n    }\n\n    //get the day\n    public int getDay(){\n        return this.day;\n    }\n\n    //get the month\n    public int getMonth(){\n        return this.month;\n    }\n\n    //get the year\n    public int getYear(){\n        return this.year;\n    }\n\n    //get the startTime\n    public int getStartTime(){\n        return this.startTime;\n    }\n\n    //get the endTime\n    public int getEndTime(){\n        return this.endTime;\n    }\n\n    //set startTime\n    public void changeStartTime(int newTime){\n        this.startTime=newTime;\n    }\n\n    //set endTime\n    public void changeEndTime(int newTime){\n        this.endTime=newTime;\n    }\n\n\n\n    //set day\n    public void changeDay(int newDay){\n        this.day = newDay;\n    }\n\n    //set month\n    public void changeMonth(int newMonth){\n        this.month = newMonth;\n    }\n\n    //set year\n    public void changeYear(int newYear){\n        this.year = newYear;\n    }\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Object/Day.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Object/Day.java	(date 1614207207000)
@@ -6,15 +6,15 @@
     private int day;
     private int month;
     private int year;
-    private int startTime;
-    private int endTime;
+    //private int startTime;
+    //private int endTime;
 
-    public Day(int day, int month, int year, int startTime, int endTime){
+    public Day(int day, int month, int year){
         this.day = day;
         this.month = month;
         this.year = year;
-        this.startTime = startTime;
-        this.endTime = endTime;
+        //this.startTime = startTime;
+        //this.endTime = endTime;
     }
 
     //get the day
@@ -33,24 +33,24 @@
     }
 
     //get the startTime
-    public int getStartTime(){
+    /*public int getStartTime(){
         return this.startTime;
-    }
+    }*/
 
-    //get the endTime
+    /*get the endTime
     public int getEndTime(){
         return this.endTime;
-    }
+    }*/
 
-    //set startTime
+    /*set startTime
     public void changeStartTime(int newTime){
         this.startTime=newTime;
-    }
+    }*/
 
-    //set endTime
+    /*set endTime
     public void changeEndTime(int newTime){
         this.endTime=newTime;
-    }
+    }*/
 
 
 
Index: app/src/main/java/com/example/myapplication/Persistence/Day_persistence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Persistence;\nimport com.example.myapplication.Object.Day;\nimport java.util.List;\n\npublic interface Day_persistence {\n    void setStartTime(Day target, int newTime);\n    void setEndTime(Day target, int newTime);\n    void setMonth(Day target, int newMonth);\n    void setDay(Day target, int newDay);\n    void setYear(Day target, int newYear);\n    void deleteDay(Day target);\n    void addDay(Day target);\n\n    List<Day>getAllDay();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Persistence/Day_persistence.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Persistence/Day_persistence.java	(date 1614207207000)
@@ -3,8 +3,8 @@
 import java.util.List;
 
 public interface Day_persistence {
-    void setStartTime(Day target, int newTime);
-    void setEndTime(Day target, int newTime);
+    //void setStartTime(Day target, int newTime);
+    //void setEndTime(Day target, int newTime);
     void setMonth(Day target, int newMonth);
     void setDay(Day target, int newDay);
     void setYear(Day target, int newYear);
Index: app/src/main/res/layout/activity_task.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_task.xml	(date 1614207207000)
+++ app/src/main/res/layout/activity_task.xml	(date 1614207207000)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/myapplication/Presentation/TaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Presentation;\n\npublic class TaskActivity {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Presentation/TaskActivity.java	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/java/com/example/myapplication/Presentation/TaskActivity.java	(date 1614207207000)
@@ -1,4 +1,6 @@
 package com.example.myapplication.Presentation;
 
-public class TaskActivity {
+import android.app.Activity;
+
+public class TaskActivity extends Activity {
 }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.myapplication\">\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.MyApplication\">\n        <activity android:name=\".Presentation.DayActivity\"></activity>\n        <activity android:name=\".SplashPageActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".MainActivity\"></activity>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 1c51db1782aa34dae41a9660d5eff5583b9c37d8)
+++ app/src/main/AndroidManifest.xml	(date 1614207207000)
@@ -18,6 +18,7 @@
             </intent-filter>
         </activity>
         <activity android:name=".MainActivity"></activity>
+        <activity android:name=".Presentation.TaskActivity" />
     </application>
 
 </manifest>
\ No newline at end of file
