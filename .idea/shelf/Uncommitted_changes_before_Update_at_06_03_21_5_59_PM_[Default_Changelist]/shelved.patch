Index: app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Persistence;\n\nimport com.example.myapplication.Object.Tasks;\n\nimport java.util.List;\n\npublic interface Task_persistence {\n\n    int getNewTaskId();\n    Tasks getTask(int taskId);\n    Tasks addTask(final Tasks task);\n    Tasks deleteTask( Tasks task);\n    void editTask(Tasks oldTask, Tasks newTasks);\n    boolean checkForSame(Tasks task1, Tasks task2);\n    void setStatus(Tasks task, String newStatus) ;\n    void setTaskDate(Tasks tak,String taskDate) ;\n\n    List<Tasks> getAllTasks();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java	(revision a26a2d114fe2c1e9ce85332d9ff8c727191f5c92)
+++ app/src/main/java/com/example/myapplication/Persistence/Task_persistence.java	(date 1614919042000)
@@ -1,19 +1,19 @@
 package com.example.myapplication.Persistence;
 
-import com.example.myapplication.Object.Tasks;
+import com.example.myapplication.Object.Task;
 
 import java.util.List;
 
 public interface Task_persistence {
 
     int getNewTaskId();
-    Tasks getTask(int taskId);
-    Tasks addTask(final Tasks task);
-    Tasks deleteTask( Tasks task);
-    void editTask(Tasks oldTask, Tasks newTasks);
-    boolean checkForSame(Tasks task1, Tasks task2);
-    void setStatus(Tasks task, String newStatus) ;
-    void setTaskDate(Tasks tak,String taskDate) ;
+    Task getTask(int taskId);
+    Task addTask(final Task task);
+    Task deleteTask( Task task);
+    void editTask(Task oldTask, Task newTasks);
+    boolean checkForSame(Task task1, Task task2);
+    void setStatus(Task task, String newStatus) ;
+    void setTaskDate(Task tak,String taskDate) ;
 
-    List<Tasks> getAllTasks();
+    List<Task> getAllTasks();
 }
